version: '3.8'

services:
  kafka:
    image: bitnami/kafka:3.8
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@10.11.0.2:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://10.11.0.2:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    networks:
      doc_network:
        ipv4_address: 10.11.0.2

  redpanda-console:
    image: docker.redpanda.com/vectorized/console:latest
    container_name: redpanda-console
    ports:
      - "8080:8080"
    environment:
      - KAFKA_BROKERS=10.11.0.2:9092
    depends_on:
      - kafka
    networks:
      doc_network:
        ipv4_address: 10.11.0.30

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - redpanda-console

    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./html:/usr/share/nginx/html
      - /etc/nginx/ssl:/etc/nginx/ssl
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd
    networks:
      doc_network:
        ipv4_address: 10.11.0.4

volumes:
  kafka_data:
    driver: local

networks:
  doc_network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.11.0.0/16
          gateway: 10.11.0.1